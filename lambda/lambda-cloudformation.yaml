AWSTemplateFormatVersion: '2010-09-09'
Description: role-policies-sync-lambda

Parameters:
  ArtifactS3BucketName:
    Type: String
    Default: service-catalog-artifact
  ArtifactS3ObjectName:
    Type: String
    Default: role-policy-lambda/deployment-package.zip

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: S3 Bucket Configuration
        Parameters:
          - ArtifactS3BucketName
          - ArtifactS3ObjectName
    ParameterLabels:
      ArtifactS3BucketName:
        default: "Name of the Lambda Artifact S3 Bucket"
      ArtifactS3ObjectName:
        default: "Name of the Lambda Artifact Object Key"

Resources:
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: role-policies-sync-lambda
      Handler: app.handler
      Runtime: python3.7
      Description: Function to create stacksets based on the role policies and deploy them into the ou's
      Code:
        S3Bucket: !Ref ArtifactS3BucketName
        S3Key: !Ref ArtifactS3ObjectName
      MemorySize: 128
      Timeout: 900
      Role: !GetAtt LambdaRole.Arn
  LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub role-policies-sync-lambda-role-${AWS::Region}
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub role-policies-sync-lambda-policy-${AWS::Region}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:*
              - organizations:*
              - cloudformation:*
              - codepipeline:PutJobFailureResult
              - codepipeline:PutJobSuccessResult
              - cloudformation:ValidateTemplate
              - iam:GetRole
              - iam:GetUser
              - iam:GetGroup
            Resource:
              - "*"
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
      Roles:
        -
          !Ref LambdaRole
Outputs:
  LambdaArn:
    Description: ARN of the Lambda Function, which syncs up the role policies
    Value: !GetAtt Lambda.Arn
    Export:
      Name: role-policies-sync-lambda